M.I.T. Computation Growth Page 3.

courses were taught as senlor and graduate electives. This
year, for the first time, over 200 freshmen are being taught
programming. The impact of this and similar groups is
bound to be felt in an inereased number of users in the next
few years. |

Before extrapolating out into what M.I.T's needs will
be, let us take a closer look at the major users as of to-
day: 1In general, these people are using advanced program-
ming systems, such as LISP (for symbolic manipulation),
DYNAMO (for industrial dynamics), COMIT (for language trans-
lation) and FORTRAN (for mathematical computation) rather
than basic machine codes such as SAP. These programming sys-
tems were explicitly designed to make problem statement and
programming far simpler, by placing most of the detailed
coding responsibility upon the machine. As a result, people
are attempting more ambitious (and time consuming from a
machine point of view) projeets. The exploitation of these
systems 1s, in general, in its infancy.

Not only are time requirements growing, as can be seen
from a typlcal set of problem growth curves on Figure (4),
but in many cases, the capacity of the 704 is no longer suf-
ficient to handle certain classes of problems, even with an
immoderate amount of running time.

The reasons for this become clearer if we take a closer
look at the types of research problems of current interest.
These problems seem to fall in the following general areas:
(a2) Nonlinear partial differential equation problems with
more accuracy required in a finer mesh of volumn cells; (b)
Slmulation problems involving more variables and parametric
variations; (c) Generalized language translation problems
involving large vocabularies and contextual meanings; (d)
Simulatlon of intelligent behavior, problem solving, theorum
proving, pattern recognition, analysis; (e) Man-machine in-
teraction; (f) Large scale data reductiony (g) Optimization.

_