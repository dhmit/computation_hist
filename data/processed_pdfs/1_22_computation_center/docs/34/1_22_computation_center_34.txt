cCc-28 Page 1 of 3

COMPUTATION CENTER

Massachusetts Institute of Technology
Cambridge 39, Massachusetts

To: D. N. Arden
From: S. F. Best
Dates July 18, 1957

Subject: The Relocatable Loader Pynched by FORTRAN

This description of the loader punched at the front
of all binary decks which FORTRAN produces may be useful to
people who wish to modify a FORTRAN-produced program by read-
ing in their own binary modifications. No description of this
loader has been distributed through SHARE, and the conclusions
stated below were arrived at through a study of the binary cards
and checked by a simple experiment on the 704.

It loads both absolute’) and relocatable binary 185
formation cards, but does not use th jtandara origin card °
It does not load correction-transferll) cards,

It is 4 cards long and occupies locations 0 through
137 octal.

If it encounters any normal self-loading card, it
performs a load-card sequence.

FORTRAN Storage Map

The storage map normally shows the actual machine
location of variables, but does not show the machine location
of the program. The program is punched on relocaiyyie binary
cards, and the storage map tells only the nominal location
of a given statement. Normally, one needs to add 140(octal)
to this value to get the actual machine location. : |

Relocatable Cards

The action of this loader when loading relocatable
information cards can be explained by considering how one could

A —————————— A ————— ee ea
(1) See Programming Standards in the Share Reference Manual
for Tr TTE Ton of these terms.


CC-28 Page 2

load into core memory a number of programs punched on relocat-
able cards where each program nominally begins in location O.

Each program would be preceded by a control card 2),
These control cards have the following format when used to
load programs which nominally begin at O:

OL, decrement: 40 octal; to identify this as a
control card.

OL, address: L, the length of the program, i.e.,
a number one greater than the nominal
location of the last word of the program.

OR, address: D, the amount by which any relocatable
references to data (i.e., locations
larger than L) should be relocated
(expressed in 2's complement form if
negative.)

Now suppose the loader followed by the programs and
their associated control cards are loaded in. The loader
occupies locations O through 137 octal. The lst program will
be relocated into locations 140g through (137g + L,).

All relocatable references within the 1st program to nominal
locations less than L; will be relocated by +140g (or -140g

in the case that they are relocatable as complements). All
relocatable references to nominal locations greater than or
equal to L, will be relocated by +D, (whether or not they are

relocatable as complements).

The 2nd program will be relocated into locations
(140g + Ly) through (137g + L, + Lo). The relocatable refer-
ences to nominal locations less than within the 2nd program
will be relocated by 140g + L,, (or -(140g + L,)) Relocatable
references to nominal locations not less than Lo are relocated
by +Dy 0

 

(2) This control card serves somewhat the same purpose as what
is called an "origin card® in the Share Reference Manual,
but since its format and interpretation is quite different,
it seemed that the term "origin card" shouldn't be used
here,


a EE —— i)

cC-28 ne :
Similarly for all the other programs. The it
goes into i prog | Jth program
1400 + 3° IL
8 i=] x
et seq.

It will be left as an exercise for the reader to
devise ways to use this loader to load programs not nominally
starting at 0. We offer only these cryptic remarks:

l. One may put Two or more control cards together
with no intervening information cards.

2. Negative addresses are 2's complements.

5. The amount by which the program following the
next control card will be relocated is stored In 136g and may
be changed by a suitable absolute binary information card.

4. An annotated copy of the loader is available for
inspection at the author's office, Room 26-261.

Signed: oy

eldon I. 3

SFB:n


