{% extends "base.jinja2" %}

{% block extraheader %}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intro.js/2.9.3/introjs.min.css" type="text/css">
    <link rel="stylesheet" href="{{ static('css/simulations.css') }}" type="text/css">
{% endblock %}

{% block content %}
    {% block extra_stuff_at_top %}{% endblock %}
    <br />
    <div class="container">
        <p id="loading">Loading...</p>
        <div class="row">
            <div class="col-sm-4" data-step="2" data-intro="This is where you can see the IBM 704 Assembly Language
            code as it would be entered into a Symbolic Coding Form before being converted to punch card format.">
                <h3>Code</h3>
                <div id="code">
                    <div id="code_heading" class="row">
                        <p>  </p>
                        <div class="col-sm px-2">Lbl</div>
                        <div class="col-sm px-2">Op</div>
                        <div class="col-sm px-2">ATD</div>
                    </div>
                </div>
                {% if simulation_name == 'general_assembler' %}
                    <div id="class_buttons">
                        <button type="button" id="add_line">+</button>
                        <button type="button" id="remove_line">-</button>
                    </div>
                {% endif %}
            <br />
            <h4>Help</h4>
            <p>Instruction to be executed next is highlighted in <span class="next_instruction">blue</span>.</p>
            <p>Target address of instruction to be executed next is highlighted in <span class="target_register">pink</span>.</p>
            <p>Mouse over words (the binary numbers) to see how they could be interpreted.</p>
            <br />
            </div>
            <div class="col-sm-5" data-step="3" data-intro="This is the display of the data in the computer's general
             memory.  Mouse over a register to see the possible interpretations of the binary.">
                <h3>General Memory</h3>
                <div class="pre-scrollable" id="general_memory_div"></div>
                <br />
            </div>
            <div class="col-sm-3" id="other_registers" data-step="4" data-intro="These are special registers for
            storage and operations.  You can mouse over these registers as well.">
                <h3>Other Registers: </h3>
                
                <p data-step="5" data-intro="This is the instruction location counter, which determines the address of
                 the instruction that the computer will execute.  When the computer is stopped, it shows the address
                 of the next instruction to be executed.">Instruction Location Counter: <span id="instruction_location_counter" class="number" data-toggle="tooltip"></span></p>

                <p>Instruction Register: <span id="instruction_register" class="number" data-toggle="tooltip"></span></p>

                <p>Storage Register: <span id="storage_register" class="number" data-toggle="tooltip"></span></p>

                <p data-step="6" data-intro="This is the accumulator, which is used for addition and
                subtraction operations.">Accumulator: <span id="accumulator" class="number"
                                                            data-toggle="tooltip"></span></p>

                <p data-step="7" data-intro="This is the Multiplier-Quotient register, which is
                used for multiplication and division operations.">Multiplier-Quotient Register: <span
                        id="mq_register" class="number" data-toggle="tooltip"></span></p>

                <div data-step="8" data-intro="These are the index registers, which are used for address modification
                 and control flow.">
                    <p>Index Register A: <span id="index_a" class="number" data-toggle="tooltip"></span></p>
                    <p>Index Register B: <span id="index_b" class="number" data-toggle="tooltip"></span></p>
                    <p>Index Register C: <span id="index_c" class="number" data-toggle="tooltip"></span></p>
                </div>
                <br />
            </div>
        </div>

        <div class="col-sm-12 sim_buttons">{% block buttons %}{% endblock %}</div>
    </div>
    <br>
    <div class="col-sm-12 text-center bg-light border border-primary" id = "line_desc" data-step="9" data-intro=
    "This shows the next operation to be executed in the assembler."></div>
    <br />
    <div class="jumbotron text-left" data-step="10" data-intro="This is the in-depth explanation for how the assembler operates
     and how this specific code runs."
    >{% block description %}{% endblock %}</div>

    <div class="modal" tabindex="-1" role="dialog" id="error_message">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Error!</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <p id="dialog_text">Modal body text goes here.</p>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>
{% endblock %}

{% block scripts %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/intro.js/2.9.3/intro.min.js"
            type="application/javascript"></script>
    <script src="{{ static('js/simulator.js')}}" type="module"></script>

    {% if simulation_name == 'general_assembler' %}
        <script src="{{ static('js/general_assembler.js')}}" type="module"></script>
        <script type="module">
            import { start } from '{{ static('js/general_assembler.js') }}';
            $(document).ready(start);
        </script>
    {% else %}
        <script src="{{ static('js/demos.js')}}" type="module"></script>
        <script type="module">
            import * as Demos from '{{ static('js/demos.js') }}';
            {% if simulation_name == 'assembly_addition' %}
                $(document).ready(() => {
                    Demos.start_demo(Demos.assembly_addition_demo_params);
                });
            {% elif simulation_name == 'floating_point_operations' %}
                $(document).ready(() => {
                    Demos.start_demo(Demos.floating_point_operations_demo_params );
                });
            {% elif simulation_name == 'looping_with_tix' %}
                $(document).ready(() => {
                    Demos.start_demo(Demos.looping_with_tix_demo_params);
                });

            {% endif %}

        </script>
    {% endif %}
    <script src="{{ static('js/render.js')}}" type="module"></script>
{% endblock %}
