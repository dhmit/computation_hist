Page 1 of 3
MIT COMPUTATION CENTER
Cambridge 39, Massachusetts

Memorandum CC-22: Notes on the Sky-Blue Compiler
Supplement 1: On functions which produce more than
one quantity as output

by: John McCarthy July 11, 1957

; This section is independent of the kinds of aguantity th
way be allowed. Many subroutines which one would like a comn

~
X
w' whe ole
-

to use produce more than one number as output. In FORTRAN th
rules for composing functions cannot conveniently deal wit
such routines quite apart from the fact that there is nn Tacility
for storing the output of such functions.

I propose that the MIT system allow the use of functions
that produce several quantities as outputs and that it allow the
use of computer statements with the names of several quantities
on the left side. We give several examples.

1. X,¥= ¥.,X

This program interchanges Y and X. It is intended that
the values of the quantities on the right side at the time Just
before the execution of the statement be used for computing all
quantities on the left side. Thus this program compiles into
something different from the pair of FORTRAN statements

X=Y
Y=X

2. X,¥,Z2=X+Y, SIN (2), Y + c0S(Z)

>. X1, X2, X3, X4 = F(X1,X2,X3,X4), X1, X2, X3

This illustrates a use for this kind of formula which might
be Important in the numerical solution of differential equations
by Milne methods.

Here F is a function which produces two quantities from a
Single quantity.

The problem of composing functions which produce sev
quantities may be l1llustrated by a data flow dlagram. {Al

it looks like a flow chart it 1s not ac all the same. A Flow
chart is a control flow diagr

-
{
> -~ Yr
aly a bad Q


Page 2 of 3

 

an

Here m is & function taking 4 input qusHtIcies and producing
3 outputs £,g,h and k each have 2 inputs and 1 output. The
desired composition has 4 inputs and 2 outputs.

The question 18: How shail we describe the composed
function, It 18 proposed that this be done a8 follows.
First, we redraw the dlagram 80 that the functions appear in
linear order.

 

Then we make the convention that when a function which
nominally has m inputs and n outputs is applied to P inputs
where P > m the function is considered to operate on the first
m inputs, the remainder belng passed unchanged. With this
question it 1s necessary to have a means of selecting certain
of an ordered set of variables and reordéring them. We propose
to do this by certain psuedo operators called PI operators. In
the present case we write our composed function.

V = FeG-PI(2413) -H* PI(24%213)°K°PI(23123)°M

Here we use “periods” for denoting composition. The PI pseudo-

operator PI(23123) takes 3 variables as input and produces 5

as output. If there were more than 9 variables the above |
notation could not be used unambiguously So we propose the

convention that Af numbers larger than 9 occur the pseudo-operation

be written PI(1,2,17) but that if no commas at all occur the
digits represent separate numbers.


Ve say PS€udo-operation
if is not Proposed that there
to them. ey are merely inst
up the outputs of certain rout

in describing the PI's because
Should be Subroutines corresponding
ructions to the compiler to line
ine as inputs for others,


