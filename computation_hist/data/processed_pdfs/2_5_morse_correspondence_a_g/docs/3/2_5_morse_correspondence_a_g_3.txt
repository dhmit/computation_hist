February 27, 1957

Dr, J. B. Robertson, Chairman
ACM Program Committee
University of Illinois
Urbana, Illinois

Dear Dr. Robertson:

Enclosed in quadruplicate are copies of an abstract
and a summary of a proposed paper entitled "The M.I.T. Auto-
matic Coding System for the I ,B.M, 704, to be given at the
June meeting of the ACM,

The paper describes work which was carried out
jointly by the staff of the M.I1.T. Computation Center, and, if
accepted, will be read by one of the undersigned.

Sincerely yours,
A, Biegel

F, C, Helwig

8S, PF, Best

AS:gn
Enclosures


SUMBARY
THE B.I.T, AUTOMATIC CODING SYSTEM FOR
THE I.B.M, 704

Abstract

An automatic coding system, which, it is hoped, will
be useful to novice and expert coders alike, is being developed
for use on the I.B.M, 704 at the M.1.7, Computation Center. The
system is not yet in operation, but its underiying philosophy is
already clear, It is felt that the new developments embodied in
the M.I.T. system will be of interest to others ai this time,
The principal features of this system are:

1) The inclusion of an advanced algebraic language and
of elementary machine code in one comprehensive coding system,

2) The provision for defining functions {i.e., sub-
routines) at will within the algebraic language, and the separa
tion of the defining process frem the computing process,

3) The use of symbolic addressing to facilitate the
interliaking of the algebraic and machine languages,


Digital Computer laboratory
Hassachusetis Institute of Technology
Cambridge 39, Massachusetts

Summary

THE MIT AUTOMATIC CODING SYSTEM FOR THE IBM 704

 

The objective of automatic coding is to simplify the process of
solving problems using s digital computer, This is commonly done by pro-
viding the programmer with a coding language which is easier for him to
use than the computer's own instruction code. Automatic coding can be ap-
proached on many levels--early systems (and meny later ones) employ a lan-
guage close to the machine language (machine-like), whereas more eiszborate
recently-developed systems offer a coding language that approximates more
or less succesefully ordinary esigebraic notation (human-like).

For obvious reasons, 2 human-like coding language is more ac
ceptable to the everage coder than is a machine-like one, It has the
virtue of familiarity; there is little mew to be learned, sand the re-
organization of thought made necessary by the computer is kept to a mini-
mum, Nopetheless, proficient coders often prefer to use a machine-like
language, objecting that the human-like ones sre so far removed from the
details of the machine that the full capsbilities of the computer cannot
be exploited, OUCiten, therefore, the most advanced automatic coding sys-
tems are used by inexperienced coders; while the experts choose to uti-
lize their intimate Enowledge of the computer in ways permitted only in
machine code.

An autematic coding system, which, it is hoped, will be useful
to novice and expert coders like, ig being developed for use cn the I.B HM.
704 at the H.E.T, Computation Center. The system is not yet in operation,
but its underlying philosophy is already clear, It is felt that the new
developments embodied in the HM.I.7. system will be of interest to others
et this time, The principal features of this system are:

1) The inclusion of an advanced human-like language and of an
elementary machine~like language in one comprehensive coding system,


fhe

    

a - ae > 2) The PEOVigian Lop Gefinggg functiong (yo : Subroutineg) at
i Will wiengy Lhe algebraje language and the Separation ff the Sefining pr.

Baching nsiractiogg alch exeoyge Coputationg descriveq ip tig langugge
Le muchine code itoeig, bowever, Wiil alge be pare of the ing: langugge
SNE & complete Hhehonie ang Symbolic Wathine- language 28somhl ep will pe
included Within the Coding System, xo eRphasig will pe Placed op @i they
language; SGth wila Lag Sgualiy Scceptadle, sad the Coder mg fe¥ert from

“Rrutines vitatn ge 4 tis “£%brate language

Subroutine Librapy This jg done Blmply by Eiving the Coding needed to
Ovaluage the function, Using the Rlgebraie ang Backing language Rotation
“Wloyed gop the regy ef the Progrog, ihe Coding that define , function,
however, is dletinguisneg ros othe, Coding uring input and ig BONCra tay
in the form of » Tlosaeg Bubrouting in this vay, the familig, Rotion of o
function introduceg Subroutines inte the Algebra Language wid Bagag bog
Bible mope “Cfldtens Geding


Interlinking the two languages

Bach algebraic instruction (numerical or logical) gives rise in
the final program to a sequence of generated machine instructions. The
length of this sequence and its location in storage are unikmown to the
coder, Nonetheless, he msy tag an algebraic instruction with 2 symbolic
address, just as ho would ag machine instruction, A symbolic address so
assigned is always associated with the first generated instruction, so
that control nay pe transferred (possibly by use of 2 machine instruction)
to the start of the generated sequence, Hgually important, the constants
and variables appearing in the slgebraic instructions may also be referred
to in the machine-isngusge portions of the program. A storage location is
automatically assigned for each of these quantities during input, and a
symbolic address is also assigned at the same time, Thus, the variable X
will always be stored at symbolic address X, and the constant 24 at syabolic
address (24). The intermizing of algebraic and machine language is, in this
way, facilitated, and efficient programs combining the two are made possible,


